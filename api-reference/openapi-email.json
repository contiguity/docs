{
    "openapi": "3.0.0",
    "info": {
        "title": "Contiguity Email API",
        "description": "API documentation for using the Contiguity API.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.contiguity.co"
        }
    ],
    "paths": {
        "/send/email": {
            "post": {
                "summary": "Send email",
                "description": "Send emails. Some email parameters can be configured in the Dashboard such as tracking, setting your custom domain, and more.",
                "operationId": "sendEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "to",
                                    "from",
                                    "subject",
                                    "body",
                                    "contentType"
                                ],
                                "properties": {
                                    "to": {
                                        "type": "string",
                                        "description": "Recipient's email address",
                                        "example": "recipient@example.com"
                                    },
                                    "from": {
                                        "type": "string",
                                        "description": "Sender's name",
                                        "example": "sender@example.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "description": "Email subject",
                                        "example": "Test Email"
                                    },
                                    "body": {
                                        "type": "string",
                                        "description": "Email content",
                                        "example": "Hello, this is a test email."
                                    },
                                    "contentType": {
                                        "type": "string",
                                        "description": "Content type of the email",
                                        "enum": ["html", "text"],
                                        "example": "text"
                                    },
                                    "cc": {
                                        "type": "string",
                                        "description": "CC email address (only 1 is supported as of now)",
                                        "example": "cc@example.com"
                                    },
                                    "replyTo": {
                                        "type": "string",
                                        "description": "Reply-to email address",
                                        "example": "reply@example.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully sent"
                                        },
                                        "crumbs": {
                                            "type": "object",
                                            "properties": {
                                                "plan": {
                                                    "type": "string",
                                                    "example": "usage"
                                                },
                                                "quota": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "email"
                                                },
                                                "ad": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            }
                                        },
                                        "email_id": {
                                            "type": "string",
                                            "description": "Email ID, used for delivery tracking and analytics",
                                            "example": "em_123abc456def"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing parameters"
                    },
                    "401": {
                        "description": "Invalid or suspended token"
                    },
                    "500": {
                        "description": "Sending failed or internal errors occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "Authentication using a Bearer Token. Specify `Authorization: Token YOUR_TOKEN`. `Bearer` is allowed."
            }
        }
    }
}
